{"version":3,"sources":["Components/Pieces/YEETGALE.jpg","Components/Pieces/Queen/icons/PONC_Queen.svg","Components/Pieces/Queen/icons/POC_Queen.svg","Components/Pieces/Rook/icons/PONC_Rook.svg","Components/Pieces/Rook/icons/POC_Rook.svg","Components/Pieces/Bishop/icons/PONC_Bishop.svg","Components/Pieces/Bishop/icons/POC_Bishop.svg","Components/Pieces/Knight/icons/PONC_Knight.svg","Components/Pieces/Knight/icons/POC_Knight.svg","Service/MoveLogic/diagonalLogic.js","Service/MoveLogic/axialLogic.js","Service/service.js","Service/MoveLogic/knightLogic.js","Models/root-store.js","Components/RootStoreProvider.js","Components/Pieces/Queen/Queen.js","Components/Pieces/Rook/Rook.js","Components/Pieces/Bishop/Bishop.js","Components/Pieces/Knight/Knight.js","Components/Square/Square.js","Components/Board/Board.js","Components/GameInfo/GameInfo.js","Components/App/App.js","index.js"],"names":["module","exports","getLegalDiagonalMoves","piece","currentPos","boardState","whiteMove","console","time","moves","toLowerCase","toUpperCase","x","y","blockedSquare","availableSquare","squareAvailability","legalDiagonalMove","blockedPath","availableMove","push","timeEnd","newPos","getLegalAxialMoves","legalAxialMove","getLegalMoves","arr1","arr2","concat","getLegalKnightMoves","RootStoreModel","types","model","boardLayout","string","boolean","castlingRight","enPassantAvailible","halfMoves","integer","fullMoves","legalMoves","array","views","self","getBoardState","row","col","arr","count","i","subArr","j","stringTo2DArray","availableLegalMoves","map","move","actions","movePiece","oldPos","currentBoard","toString","replace","changePlayer","clearLegalMoves","setupRootStore","a","rs","create","RootStoreContext","createContext","RootStoreProvider","Provider","useStores","useContext","Queen","observer","squareState","objectTest","name","rootStore","useDrag","end","item","monitor","type","collect","isDragging","drag","preview","DragPreviewImage","connect","src","realQueen","poncQueen","pocQueen","getColour","alt","className","ref","onMouseDown","Rook","realRook","poncRook","pocRook","Bishop","realBishop","poncBishop","pocBishop","realKnight","poncKnight","pocKnight","Square","pos","useDrop","accept","canDrop","canMove","drop","isOver","legal","forEach","log","style","backgroundColor","overLay","length","setColour","getPiece","Board","subarray","rowNum","colNum","key","GameInfo","App","useState","setRootStore","useEffect","then","catch","err","DndProvider","backend","HTML5Backend","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6728f07.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/YEETGALE.14bc3c60.jpg\";","module.exports = __webpack_public_path__ + \"static/media/PONC_Queen.fe620724.svg\";","module.exports = __webpack_public_path__ + \"static/media/POC_Queen.2b84eb91.svg\";","module.exports = __webpack_public_path__ + \"static/media/PONC_Rook.af8ebcf9.svg\";","module.exports = __webpack_public_path__ + \"static/media/POC_Rook.618961c2.svg\";","module.exports = __webpack_public_path__ + \"static/media/PONC_Bishop.31190906.svg\";","module.exports = __webpack_public_path__ + \"static/media/POC_Bishop.562afbca.svg\";","module.exports = __webpack_public_path__ + \"static/media/PONC_Knight.78f6501d.svg\";","module.exports = __webpack_public_path__ + \"static/media/POC_Knight.57cd06ca.svg\";","export const getLegalDiagonalMoves = (piece, currentPos, boardState, whiteMove) => {\r\n  console.time(\"YEET\")\r\n  const moves = []\r\n\r\n  if (piece.toLowerCase() === piece && whiteMove) return moves\r\n  if (piece.toUpperCase() === piece && !whiteMove) return moves  \r\n  \r\n  let x = currentPos.x - 1\r\n  let y = currentPos.y - 1\r\n  let blockedSquare = false\r\n  let availableSquare = true\r\n\r\n  //CHECKING UP AND LEFT DIAGONAL\r\n  while (x >= 0 && y >= 0 && !blockedSquare && availableSquare){\r\n    let squareAvailability = legalDiagonalMove\r\n(piece, boardState, currentPos, {x: x, y: y})\r\n    blockedSquare = squareAvailability.blockedPath\r\n    availableSquare = squareAvailability.availableMove\r\n      if (availableSquare) {\r\n       moves.push({x: x, y: y})\r\n      }\r\n    x--\r\n    y--\r\n  }\r\n  \r\n  //CHECKING UP AND RIGHT DIAGONAL\r\n  x = currentPos.x + 1\r\n  y = currentPos.y - 1\r\n  blockedSquare = false\r\n  availableSquare = true\r\n  while (x <= 7 && y >= 0 && !blockedSquare && availableSquare){\r\n    let squareAvailability = legalDiagonalMove\r\n(piece, boardState, currentPos, {x: x, y: y})\r\n    blockedSquare = squareAvailability.blockedPath\r\n    availableSquare = squareAvailability.availableMove\r\n    if (availableSquare) {\r\n      moves.push({x: x, y: y})\r\n     }\r\n    x++\r\n    y--\r\n  }\r\n  \r\n  //CHECKING DOWN AND LEFT DIAGONAL\r\n  x = currentPos.x - 1\r\n  y = currentPos.y + 1.\r\n  blockedSquare = false\r\n  availableSquare = true\r\n  while (x >= 0 && y <= 7 && !blockedSquare && availableSquare){\r\n    let squareAvailability = legalDiagonalMove\r\n(piece, boardState, currentPos, {x: x, y: y})\r\n    blockedSquare = squareAvailability.blockedPath\r\n    availableSquare = squareAvailability.availableMove\r\n    if (availableSquare) {\r\n      moves.push({x: x, y: y})\r\n     }\r\n    x--\r\n    y++\r\n  }\r\n\r\n  //CHECKING DOWN AND RIGHT DIAGONAL\r\n  x = currentPos.x + 1\r\n  y = currentPos.y + 1\r\n  blockedSquare = false\r\n  availableSquare = true\r\n  while (x <= 7 && y <= 7 && !blockedSquare && availableSquare){\r\n    let squareAvailability = legalDiagonalMove\r\n(piece, boardState, currentPos, {x: x, y: y})\r\n    blockedSquare = squareAvailability.blockedPath\r\n    availableSquare = squareAvailability.availableMove\r\n    if (availableSquare) {\r\n      moves.push({x: x, y: y})\r\n     }\r\n    x++\r\n    y++\r\n  }\r\n  console.timeEnd(\"YEET\")\r\n  return moves \r\n\r\n}\r\n\r\n\r\nconst legalDiagonalMove\r\n = (piece, boardState, currentPos, newPos) => {\r\n  let blockedPath = false\r\n  let availableMove = false\r\n  if (boardState[newPos.y][newPos.x] !== \".\"){\r\n    blockedPath = true\r\n  }\r\n  if (currentPos.x === newPos.x && currentPos.y === newPos.y ){\r\n    availableMove = false\r\n  }\r\n  if (piece.toLowerCase() === piece){\r\n    //Black Move\r\n    if(boardState[newPos.y][newPos.x].toLowerCase() === boardState[newPos.y][newPos.x] && boardState[newPos.y][newPos.x] !== \".\" ) {\r\n      availableMove = false\r\n    } else{\r\n      availableMove = true \r\n    }\r\n  } else {\r\n    //White Move\r\n    if(boardState[newPos.y][newPos.x].toUpperCase() === boardState[newPos.y][newPos.x] && boardState[newPos.y][newPos.x] !== \".\" ) {\r\n      availableMove = false\r\n    } else {\r\n      availableMove = true \r\n    }\r\n  }\r\n  return {availableMove: availableMove, blockedPath: blockedPath}\r\n}","export const getLegalAxialMoves = (piece, currentPos, boardState, whiteMove) => {\r\n  console.time(\"YEET\")\r\n  const moves = []\r\n\r\n  if (piece.toLowerCase() === piece && whiteMove) return moves\r\n  if (piece.toUpperCase() === piece && !whiteMove) return moves  \r\n  \r\n  let x = currentPos.x - 1\r\n  let y = currentPos.y\r\n  let blockedSquare = false\r\n  let availableSquare = true\r\n\r\n  //CHECKING LEFT\r\n  while (x >= 0 && !blockedSquare && availableSquare){\r\n    let squareAvailability = legalAxialMove(piece, boardState, currentPos, {x: x, y: y})\r\n    blockedSquare = squareAvailability.blockedPath\r\n    availableSquare = squareAvailability.availableMove\r\n      if (availableSquare) {\r\n       moves.push({x: x, y: y})\r\n      }\r\n    x--\r\n  }\r\n  \r\n  //CHECKING RIGHT\r\n  x = currentPos.x + 1\r\n  y = currentPos.y\r\n  blockedSquare = false\r\n  availableSquare = true\r\n  while (x <= 7 && !blockedSquare && availableSquare){\r\n    let squareAvailability = legalAxialMove(piece, boardState, currentPos, {x: x, y: y})\r\n    blockedSquare = squareAvailability.blockedPath\r\n    availableSquare = squareAvailability.availableMove\r\n    if (availableSquare) {\r\n      moves.push({x: x, y: y})\r\n     }\r\n    x++\r\n  }\r\n  \r\n  //CHECKING UP\r\n  x = currentPos.x\r\n  y = currentPos.y - 1.\r\n  blockedSquare = false\r\n  availableSquare = true\r\n  while (y >= 0 && !blockedSquare && availableSquare){\r\n    let squareAvailability = legalAxialMove(piece, boardState, currentPos, {x: x, y: y})\r\n    blockedSquare = squareAvailability.blockedPath\r\n    availableSquare = squareAvailability.availableMove\r\n    if (availableSquare) {\r\n      moves.push({x: x, y: y})\r\n     }\r\n    y--\r\n  }\r\n\r\n  //CHECKING DOWN\r\n  x = currentPos.x\r\n  y = currentPos.y + 1\r\n  blockedSquare = false\r\n  availableSquare = true\r\n  while (y <= 7 && !blockedSquare && availableSquare){\r\n    let squareAvailability = legalAxialMove(piece, boardState, currentPos, {x: x, y: y})\r\n    blockedSquare = squareAvailability.blockedPath\r\n    availableSquare = squareAvailability.availableMove\r\n    if (availableSquare) {\r\n      moves.push({x: x, y: y})\r\n     }\r\n    y++\r\n  }\r\n  console.timeEnd(\"YEET\")\r\n  return moves \r\n\r\n}\r\n\r\n\r\nconst legalAxialMove = (piece, boardState, currentPos, newPos) => {\r\n  let blockedPath = false\r\n  let availableMove = false\r\n  if (boardState[newPos.y][newPos.x] !== \".\"){\r\n    blockedPath = true\r\n  }\r\n  if (currentPos.x === newPos.x && currentPos.y === newPos.y ){\r\n    availableMove = false\r\n  }\r\n  if (piece.toLowerCase() === piece){\r\n    //Black Move\r\n    if(boardState[newPos.y][newPos.x].toLowerCase() === boardState[newPos.y][newPos.x] && boardState[newPos.y][newPos.x] !== \".\" ) {\r\n      availableMove = false\r\n    } else{\r\n      availableMove = true \r\n    }\r\n  } else {\r\n    //White Move\r\n    if(boardState[newPos.y][newPos.x].toUpperCase() === boardState[newPos.y][newPos.x] && boardState[newPos.y][newPos.x] !== \".\" ) {\r\n      availableMove = false\r\n    } else {\r\n      availableMove = true \r\n    }\r\n  }\r\n  return {availableMove: availableMove, blockedPath: blockedPath}\r\n}\r\n","import { getLegalDiagonalMoves } from './MoveLogic/diagonalLogic.js';\r\nimport { getLegalAxialMoves } from './MoveLogic/axialLogic.js';\r\nimport { getLegalKnightMoves } from './MoveLogic/knightLogic.js';\r\n\r\nexport const stringTo2DArray = (string, row, col) => {\r\n  const arr = [];\r\n  var count = 0;\r\n  \r\n  for (var i=0; i < row; i++){\r\n    var subArr = [];\r\n    for (var j=0; j < col; j++){\r\n      subArr.push(string[count]);\r\n      count++;\r\n    }\r\n    arr.push(subArr);\r\n  }\r\n\r\n  return arr;\r\n}\r\n\r\nexport const twoDimArrayToString = (arr) => {\r\n  return arr.toString().replace(/,/g, '')\r\n}\r\n\r\n\r\nexport const getLegalMoves = (piece, currentPos, boardState, whiteMove) => {\r\n  switch (true) {\r\n    case piece.toLowerCase() === 'b':\r\n        return getLegalDiagonalMoves(piece, currentPos, boardState, whiteMove)\r\n    case piece.toLowerCase() === 'q':\r\n      let arr1 = getLegalDiagonalMoves(piece, currentPos, boardState, whiteMove)\r\n      let arr2 = getLegalAxialMoves(piece, currentPos, boardState, whiteMove)\r\n      return arr1.concat(arr2)\r\n    // case piece.toLowerCase() === 'b':\r\n    //     return bishopCanMove(pos, type, currentPos, whiteMove,boardState)\r\n    case piece.toLowerCase() === 'n':\r\n      return getLegalKnightMoves(piece, currentPos, boardState, whiteMove)\r\n    case piece.toLowerCase() === 'r':\r\n        return getLegalAxialMoves(piece, currentPos, boardState, whiteMove)\r\n    // case piece.toLowerCase() === 'p':\r\n    //     return false\r\n    default:\r\n        return [{x: 0, y: 0}, {x: 1, y:0}]\r\n  }\r\n\r\n}","export const getLegalKnightMoves = (piece, currentPos, boardState, whiteMove) => {\r\n  console.time(\"YEET\")\r\n  const moves = []\r\n  if (piece.toLowerCase() === piece && whiteMove) return moves\r\n  if (piece.toUpperCase() === piece && !whiteMove) return moves  \r\n\r\n  return [{x:0, y:0}]\r\n}","import { types } from 'mobx-state-tree';\r\nimport { stringTo2DArray, twoDimArrayToString, getLegalMoves } from '../Service/service'\r\n\r\n\r\nexport const RootStoreModel = types\r\n  .model('RootStore', {\r\n    boardLayout: types.string,\r\n    whiteMove: types.boolean,\r\n    castlingRight: types.string,\r\n    enPassantAvailible: types.string,\r\n    halfMoves: types.integer,\r\n    fullMoves: types.integer,\r\n    legalMoves: types.array(types.model({\r\n      x: types.integer, \r\n      y: types.integer \r\n    }))\r\n  }) \r\n\r\n  .views((self) => {\r\n    return { \r\n      getBoardState() {\r\n        return stringTo2DArray(self.boardLayout, 8,8)\r\n      },\r\n      availableLegalMoves() {\r\n        return self.legalMoves.map((move) => {\r\n          return {x: move.x, y:move.y}\r\n        })\r\n      },\r\n    }\r\n  }) \r\n  \r\n  .actions((self) => {\r\n    return {\r\n      movePiece( newPos, piece, oldPos ) {\r\n        let currentBoard = self.getBoardState()\r\n        currentBoard[newPos.y][newPos.x] = piece\r\n        currentBoard[oldPos.y][oldPos.x] = \".\"\r\n        self.boardLayout = twoDimArrayToString(currentBoard)\r\n        self.changePlayer()\r\n        self.halfMoves += 1\r\n        if (self.halfMoves % 2 === 0){\r\n          self.fullMoves += 1\r\n        }\r\n      },\r\n      changePlayer() {\r\n        self.whiteMove = !self.whiteMove;\r\n      },\r\n      getLegalMoves(piece, currentPos) {\r\n        self.legalMoves = getLegalMoves(piece, currentPos, self.getBoardState(), self.whiteMove);\r\n      },\r\n      clearLegalMoves() {\r\n        self.legalMoves = []; \r\n      }\r\n    }\r\n  })  \r\n\r\n\r\n  export const setupRootStore = async () => {\r\n    const rs = RootStoreModel.create({\r\n      //boardLayout: \"rnbqkbnrpppppppp................................PPPPPPPPRNBQKBNR\", \r\n      boardLayout: \"rnbqkbnr.....................R........................BBRNBQKBNR\", \r\n      whiteMove: true,\r\n      castlingRight: \"KQkq\",\r\n      enPassantAvailible: \"-\",\r\n      halfMoves: 0,\r\n      fullMoves: 0,\r\n    })\r\n    return rs\r\n  }\r\n","import { createContext, useContext } from 'react';\r\nconst RootStoreContext = createContext({});\r\nexport const RootStoreProvider = RootStoreContext.Provider;\r\nexport const useStores = () => useContext(RootStoreContext);","import React from 'react';\r\nimport { useStores } from '../../RootStoreProvider';\r\nimport { observer } from 'mobx-react';\r\n\r\nimport { DragPreviewImage, useDrag } from 'react-dnd';\r\n\r\nimport './Queen.css';\r\nimport poncQueen from './icons/PONC_Queen.svg'\r\nimport pocQueen from './icons/POC_Queen.svg'\r\nimport realQueen from '../YEETGALE.jpg'\r\n\r\nconst Queen = observer(({ squareState={squareState}, currentPos={currentPos}}) => {\r\n  const objectTest = {name: squareState}\r\n  const rootStore= useStores();\r\n  \r\n  const [{ isDragging }, drag, preview] = useDrag({\r\n    end: (item, monitor) => (rootStore.clearLegalMoves()),\r\n    item: { type: objectTest.name, currentPos: currentPos },\r\n\r\n    collect: (monitor) => ({\r\n      isDragging: !!monitor.isDragging(),\r\n      piece: squareState,\r\n\r\n    })\r\n  });\r\n\r\n  const getLegalMoves = () => {\r\n    rootStore.getLegalMoves(squareState, currentPos);  \r\n  }\r\n  const getColour = (squareState) => {\r\n    switch (true){\r\n      case squareState === \"Q\":\r\n        return poncQueen\r\n      case squareState === \"q\":\r\n        return pocQueen\r\n      default:\r\n        return null\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <DragPreviewImage connect={preview} src={realQueen} />\r\n      <img src={getColour(squareState)} \r\n      alt={squareState} \r\n      className=\"queen\" \r\n      ref={drag}\r\n      onMouseDown={getLegalMoves}/>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Queen;","import React from 'react';\r\nimport { useStores } from '../../RootStoreProvider';\r\nimport { observer } from 'mobx-react';\r\n\r\nimport { DragPreviewImage, useDrag } from 'react-dnd';\r\n\r\nimport './Rook.css';\r\nimport poncRook from './icons/PONC_Rook.svg'\r\nimport pocRook from './icons/POC_Rook.svg'\r\nimport realRook from '../YEETGALE.jpg'\r\n\r\nconst Rook = observer(({ squareState={squareState}, currentPos={currentPos}}) => {\r\n  const objectTest = {name: squareState}\r\n  const rootStore= useStores();\r\n  \r\n  const [{ isDragging }, drag, preview] = useDrag({\r\n    end: (item, monitor) => (rootStore.clearLegalMoves()),\r\n    item: { type: objectTest.name, currentPos: currentPos },\r\n\r\n    collect: (monitor) => ({\r\n      isDragging: !!monitor.isDragging(),\r\n      piece: squareState,\r\n\r\n    })\r\n  });\r\n\r\n  const getLegalMoves = () => {\r\n    rootStore.getLegalMoves(squareState, currentPos);  \r\n  }\r\n\r\n  const getColour = (squareState) => {\r\n    switch (true){\r\n      case squareState === \"R\":\r\n        return poncRook\r\n      case squareState === \"r\":\r\n        return pocRook\r\n      default:\r\n        return null\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <DragPreviewImage connect={preview} src={realRook} />\r\n      <img src={getColour(squareState)} \r\n           alt={squareState} \r\n           className=\"rook\" \r\n           ref={drag}\r\n           onMouseDown={getLegalMoves}/>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Rook;","import React from 'react';\r\nimport { useStores } from '../../RootStoreProvider';\r\nimport { observer } from 'mobx-react';\r\n\r\nimport { DragPreviewImage, useDrag } from 'react-dnd';\r\n\r\nimport './Bishop.css';\r\nimport poncBishop from './icons/PONC_Bishop.svg'\r\nimport pocBishop from './icons/POC_Bishop.svg'\r\nimport realBishop from '../YEETGALE.jpg'\r\n\r\nconst Bishop = observer(({ squareState={squareState}, currentPos={currentPos}}) => {\r\n  const objectTest = {name: squareState}\r\n  const rootStore = useStores();\r\n  \r\n  const [{ isDragging }, drag, preview] = useDrag({\r\n    end: (item, monitor) => (rootStore.clearLegalMoves()),\r\n    item: { type: objectTest.name, currentPos: currentPos},\r\n    collect: (monitor) => ({\r\n      isDragging: !!monitor.isDragging(),\r\n      piece: squareState,\r\n    })\r\n  });\r\n\r\n  const getLegalMoves = () => {\r\n    rootStore.getLegalMoves(squareState, currentPos);  \r\n  }\r\n\r\n  const getColour = (squareState) => {\r\n    switch (true){\r\n      case squareState === \"B\":\r\n        return poncBishop\r\n      case squareState === \"b\":\r\n        return pocBishop\r\n      default:\r\n        return null\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <DragPreviewImage connect={preview} src={realBishop} />\r\n      <img src={getColour(squareState)} \r\n           alt={squareState} \r\n           className=\"bishop\" \r\n           ref={drag}\r\n           onMouseDown={getLegalMoves}/>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Bishop;","import React from 'react';\r\nimport { useStores } from '../../RootStoreProvider';\r\nimport { observer } from 'mobx-react';\r\n\r\nimport { DragPreviewImage, useDrag } from 'react-dnd';\r\n\r\nimport './Knight.css';\r\nimport poncKnight from './icons/PONC_Knight.svg'\r\nimport pocKnight from './icons/POC_Knight.svg'\r\nimport realKnight from '../YEETGALE.jpg'\r\n\r\nconst Rook = observer(({ squareState={squareState}, currentPos={currentPos}}) => {\r\n  const objectTest = {name: squareState}\r\n  const rootStore= useStores();\r\n  \r\n  const [{ isDragging }, drag, preview] = useDrag({\r\n    end: (item, monitor) => (rootStore.clearLegalMoves()),\r\n    item: { type: objectTest.name, currentPos: currentPos },\r\n\r\n    collect: (monitor) => ({\r\n      isDragging: !!monitor.isDragging(),\r\n      piece: squareState,\r\n\r\n    })\r\n  });\r\n\r\n  const getLegalMoves = () => {\r\n    rootStore.getLegalMoves(squareState, currentPos);  \r\n  }\r\n\r\n  const getColour = (squareState) => {\r\n    switch (true){\r\n      case squareState === \"N\":\r\n        return poncKnight\r\n      case squareState === \"n\":\r\n        return pocKnight\r\n      default:\r\n        return null\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <DragPreviewImage connect={preview} src={realKnight} />\r\n      <img src={getColour(squareState)} \r\n           alt={squareState} \r\n           className=\"knight\" \r\n           ref={drag}\r\n           onMouseDown={getLegalMoves}/>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Rook;","import React, { useState, useEffect } from 'react';\r\nimport './Square.css';\r\nimport { useStores } from '../RootStoreProvider';\r\nimport { observer } from 'mobx-react';\r\n\r\nimport Queen from '../Pieces/Queen/Queen';\r\nimport Rook from '../Pieces/Rook/Rook';\r\nimport Bishop from '../Pieces/Bishop/Bishop';\r\nimport Knight from '../Pieces/Knight/Knight';\r\n\r\nimport { useDrop } from \"react-dnd\";\r\n\r\nconst Square = observer(({ pos=pos, squareState={squareState}}) => {\r\n\r\n    const rootStore = useStores(); \r\n    const legalMoves = rootStore.availableLegalMoves()\r\n    const [{ isOver, canDrop }, drop] = useDrop({\r\n        accept: ['Q','q','R','r','B','b'],\r\n        canDrop: (monitor) => canMove(),\r\n        drop: (monitor) => {\r\n            rootStore.movePiece(pos, monitor.type, monitor.currentPos)\r\n            rootStore.clearLegalMoves();      \r\n        },  \r\n        collect: (monitor) => ({\r\n          isOver: !!monitor.isOver(),\r\n          canDrop: !!monitor.canDrop()\r\n        })\r\n      });\r\n\r\n    const canMove = () => {\r\n        let legal = false\r\n        legalMoves.forEach((move) => {\r\n            if (move.x === pos.x && move.y === pos.y){\r\n                console.log(\"REACHED\")\r\n                legal =  true\r\n            }\r\n        })\r\n        return legal\r\n    }\r\n    const setColour = () => { \r\n        let overLay = false\r\n        if (rootStore.legalMoves.length > 0) {\r\n            \r\n            legalMoves.forEach((move) => {\r\n                if (move.x === pos.x && move.y === pos.y){\r\n                    overLay = true\r\n                }\r\n            })\r\n        }\r\n        if (pos.x % 2 === 0 & pos.y % 2 === 0 || pos.x % 2 !== 0 & pos.y % 2 !== 0 ){\r\n            return overLay ? \"#FFA9A4\" : \"White\"\r\n        }\r\n        else {\r\n            return overLay ? \"#B75C58\" : \"Gray\"\r\n        }\r\n    }\r\n\r\n    const getPiece = (squareState) => {\r\n        switch (true) {\r\n            case squareState.toLowerCase() === 'k':\r\n                //return <King squareState={squareState} currentPos={pos}/> ;\r\n                return <div>King</div>\r\n            case squareState.toLowerCase() === 'q':\r\n                return <Queen squareState={squareState} currentPos={pos}/>;\r\n            case squareState.toLowerCase() === 'b':\r\n                return <Bishop squareState={squareState} currentPos={pos}/>;                   \r\n            case squareState.toLowerCase() === 'n':\r\n                return <Knight squareState={squareState} currentPos={pos}/>;         \r\n            case squareState.toLowerCase() === 'r':\r\n                return <Rook squareState={squareState} currentPos={pos}/>;\r\n            case squareState.toLowerCase() === 'p':\r\n                //return <Pawn squareState={squareState} currentPos={pos}/>;\r\n                return <div>Pawn</div> \r\n            case squareState === '.':\r\n                return          \r\n            default:\r\n                console.log(`Error loading Square State Square State Value = ${squareState}`)\r\n                return <div>Return Error</div>\r\n        }\r\n    }\r\n\r\n        return (\r\n        <div style={{backgroundColor:setColour()}} className=\"square\" ref={drop} > \r\n            {getPiece(squareState)}\r\n        </div>\r\n        )\r\n\r\n});\r\n\r\nexport default Square;","import React from 'react';\r\nimport './Board.css';\r\nimport Square from '../Square/Square'\r\nimport { useStores } from '../RootStoreProvider';\r\nimport { observer } from 'mobx-react';\r\n\r\nconst Board = observer(() => {\r\n    \r\n    const rootStore= useStores();\r\n\r\n    return (  \r\n        \r\n        <div className=\"boardSize\"> \r\n            {rootStore.getBoardState().map(function(subarray,rowNum){\r\n                return subarray.map(function(squareState, colNum){\r\n                    return <Square key={rowNum, colNum} pos={{x:colNum, y:rowNum}} squareState={squareState}/>\r\n                })\r\n            })} \r\n        </div>\r\n   \r\n   )\r\n})\r\n\r\nexport default Board;","import React from 'react';\r\nimport { useStores } from '../RootStoreProvider';\r\nimport { observer } from 'mobx-react';\r\nimport { RootStoreModel } from '../../Models/root-store';\r\n\r\n\r\nconst GameInfo = observer(() => {\r\n  \r\n  const rootStore= useStores();\r\n  \r\n  const getPlayerTurn = () =>{\r\n    if(rootStore.whiteMove){\r\n      return <div>People Of Not Colour</div>\r\n    }else{\r\n      return <div>People of Colour</div>\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h3>GAME INFO</h3>\r\n      <div>\r\n        <h5>Player Move: </h5>\r\n        {getPlayerTurn()}\r\n      </div>\r\n      <div>\r\n        <h5>Half Moves: </h5>\r\n        {rootStore.halfMoves}\r\n      </div>      \r\n    <div>\r\n      <h5>Full Moves: </h5>\r\n      {rootStore.fullMoves}\r\n    </div>      \r\n  </div>\r\n  )\r\n});\r\n\r\nexport default GameInfo;","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport { setupRootStore } from '../../Models/root-store'; \r\nimport { RootStoreProvider } from '../RootStoreProvider';\r\nimport { DndProvider } from 'react-dnd'\r\nimport { HTML5Backend } from 'react-dnd-html5-backend'\r\n\r\nimport Board from '../Board/Board'\r\nimport GameInfo from '../GameInfo/GameInfo'\r\n\r\nfunction App() {\r\n  \r\n  const [rootStore, setRootStore] = useState();\r\n  \r\n  useEffect(() => {\r\n\r\n    if (rootStore) return;\r\n    setupRootStore()\r\n      .then((rs) => {\r\n        setRootStore(rs);\r\n      })\r\n      .catch((err) => {\r\n        console.log('failed to initialize root store');\r\n        console.log(err)\r\n      });\r\n  }, [rootStore]);\r\n\r\n  if (!rootStore) return <></>;\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <DndProvider backend={HTML5Backend}>\r\n        <RootStoreProvider value={rootStore}>\r\n          <h1>CHESSINGTON</h1>\r\n          <Board />\r\n          <GameInfo />\r\n        </RootStoreProvider>\r\n      </DndProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}